<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security-4.2.xsd 
	">
	
	<!-- 导入这个是因为security和mybatis整合会报找不到mapper，导入以后发现问题解决很神奇 -->
	<beans:import resource="applicationContext.xml"/>
	
	<http pattern="/js/**" security="none"></http>
	<http pattern="/img/**" security="none"></http>
	<http pattern="/css/**" security="none"></http>
	<http pattern="/fonts/**" security="none"></http>

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/business" access="hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')" />
		<form-login login-page="/index" login-processing-url="/login"  
			authentication-success-handler-ref="authenticationSuccessHandler"
			authentication-failure-handler-ref="authenticationFailureHandler"
			/>
		<logout logout-url="/logout" logout-success-url="/index" invalidate-session="true" delete-cookies="JSESSIONID"/>
		<csrf disabled="true"/>
	</http>
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="customAuthenticationProvider">
<!-- 		由于是自己重新定义的	 authenticationProvider所以不能在这里配置加密和盐值
			<password-encoder hash="md5">  
         		将每个用户的username作为盐值  
         		<salt-source user-property="username"/>  
		     </password-encoder> -->
		</authentication-provider>
	</authentication-manager>


	<beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="myDataSource1" />
	</beans:bean>
	
	<!-- 数据源  这里有个问题，在applicationContext已经配置了不知为何不能引用 -->
	<beans:bean id="myDataSource1" class="org.apache.commons.dbcp.BasicDataSource">	
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://localhost:3306/secsc?useUnicode=true&amp;characterEncoding=utf-8" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="0000" />
	</beans:bean>



	<!-- 自己重新设置DaoAuthenticationProvider -->
	<beans:bean id="customAuthenticationProvider" class="com.secsc.security.service.CustomAuthenticationProvider">  
	    <beans:property name="hideUserNotFoundExceptions" value="false" />  
	    <beans:property name="userDetailsService" ref="myUserDetailsService" />   
	    <beans:property name="passwordEncoder" ref="passwordEncode" />  
	    <beans:property name="saltSource" ref="saltSource" />  
	</beans:bean> 
	

	<beans:bean id="passwordEncode" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />  
	<beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">  
	    <beans:property name="userPropertyToUse" value="username"/>  
	</beans:bean> 

</beans:beans>